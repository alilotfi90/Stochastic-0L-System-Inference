from derivations import get_derivations
from solver_q2 import solve_with_restarts
def main():

    #set number of restarts for the optimizer
    no_of_restarts = 20

    # a sequence which could be generated by a Deterministic L-system
    det_seq1 = ['AB', 'ABAB', 'ABABABAB']

    # form derivation list
    derv_list = get_derivations(det_seq1)

    # Attempt random restarts
    best_val, best_sol, best_pairs, successes = solve_with_restarts(derv_list, n_restarts=no_of_restarts)
    print("Best sum-of-products:", best_val)
    print("Best distribution:", best_sol)
    print("Pairs list:", best_pairs)
    print("Number of successful solves:", successes)

    # a sequence which could be generated by a Deterministic L-system
    S0L_seq2 = ['AB', 'ABAB', 'ABABABC']

    # form derivation list
    derv_list = get_derivations(S0L_seq2)

    # Attempt random restarts
    best_val, best_sol, best_pairs, successes = solve_with_restarts(derv_list, n_restarts=no_of_restarts)
    print("Best sum-of-products:", best_val)
    print("Best distribution:", best_sol)
    print("Pairs list:", best_pairs)
    print("Number of successful solves:", successes)


if __name__ == "__main__":
    main()